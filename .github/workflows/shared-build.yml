name: Build

on:
  workflow_call:
    inputs:
      configuration:
        description: 'The Visual Studio Configuration to build'
        type: string
        required: false
        default: 'Release'
      solution-path:
        description: 'The path to the VS solution to build'
        type: string
        required: false
        default: 'RemoteDebuggerLauncherExtension.sln'
      store-artifacts:
        description: 'Flag if artifacts sould be stored'
        type: boolean
        required: true
        default: false

jobs:
  shared_build:
    name: Build VS Extension
    runs-on: windows-2022

    env:
      AssemblyInfoFile: ${{ github.workspace }}\src\Extension\GlobalAssemblyInfo.cs
      ScriptPath: ${{ github.workspace }}\eng\scripts

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # setup MSBUILD and VS
    - name: Add MSBUILD to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '[17.2,17.5)'
        msbuild-architecture: x64

    # Build Solution: determine and apply the version for the assemblies and VSIX package
    - name: 'Build Solution: Determine Version'
      id: git-version
      uses: ./eng/actions/git-version

    - name: 'Build Solution: Apply version'
      run:  ${{ env.ScriptPath }}\AssemblyInfoFileSetVersion.ps1 -SourceFilePath  ${{ env.AssemblyInfoFile }}
        -VersionPrefix ${{ steps.git-version.outputs.versionPrefix }}
        -VersionSuffix ${{ steps.git-version.outputs.versionSuffix }}
        -VersionBuild ${{ steps.git-version.outputs.versionBuild }}
      shell: pwsh

    # Build Solution: restore NuGet Packages
    - name: 'Build Solution: NuGet restore'
      id: nuget-restore
      run: msbuild ${{ inputs.solution-path }} /t:Restore /p:Configuration=${{ inputs.configuration }}
      shell: pwsh

    # Build Solution: Rebuild
    - name: 'Build Solution: Rebuild'
      id: build
      run: msbuild ${{ inputs.solution-path }} /t:Rebuild /p:Configuration=${{ inputs.configuration }}
      shell: pwsh
