//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RemoteDebuggerLauncher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RemoteDebuggerLauncher.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelling trusting Root CA.
        /// </summary>
        public static string CertificateServicesTrustCancelledByUser {
            get {
                return ResourceManager.GetString("CertificateServicesTrustCancelledByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string CommonCancelButtonLabel {
            get {
                return ResourceManager.GetString("CommonCancelButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Mode.
        /// </summary>
        public static string CommonDialogModeLabel {
            get {
                return ResourceManager.GetString("CommonDialogModeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string CommonDialogVersionLabel {
            get {
                return ResourceManager.GetString("CommonDialogVersionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string CommonOkButtonLabel {
            get {
                return ResourceManager.GetString("CommonOkButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --------------------------------------------------.
        /// </summary>
        public static string CommonStartSessionMarker {
            get {
                return ResourceManager.GetString("CommonStartSessionMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation error: file must exist.
        /// </summary>
        public static string FileExistsValidationRuleNotPresent {
            get {
                return ResourceManager.GetString("FileExistsValidationRuleNotPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation error: specify a valid IP address or DNS name.
        /// </summary>
        public static string HostNameValidationRuleNoValidNameOrIp {
            get {
                return ResourceManager.GetString("HostNameValidationRuleNoValidNameOrIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Online: Target device has internet access, can download and install in it&apos;s own
        ///Offline: Target device no internet access, PC will download and trigger install.
        /// </summary>
        public static string InstallationModeDescription {
            get {
                return ResourceManager.GetString("InstallationModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offline.
        /// </summary>
        public static string InstallationModeOfflineDisplayName {
            get {
                return ResourceManager.GetString("InstallationModeOfflineDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Online.
        /// </summary>
        public static string InstallationModeOnlineDisplayName {
            get {
                return ResourceManager.GetString("InstallationModeOnlineDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the version and installation type, then click OK to install..
        /// </summary>
        public static string InstallDebuggerDialogHeaderText {
            get {
                return ResourceManager.GetString("InstallDebuggerDialogHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install VS Code Debugger on target host.
        /// </summary>
        public static string InstallDebuggerDialogTitle {
            get {
                return ResourceManager.GetString("InstallDebuggerDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest: The latest version of the Debugger.
        /// </summary>
        public static string InstallDebuggerVersionDescription {
            get {
                return ResourceManager.GetString("InstallDebuggerVersionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest.
        /// </summary>
        public static string InstallDebuggerVersionLatestDisplayName {
            get {
                return ResourceManager.GetString("InstallDebuggerVersionLatestDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual Studio 2022.
        /// </summary>
        public static string InstallDebuggerVersionVs2022DisplayName {
            get {
                return ResourceManager.GetString("InstallDebuggerVersionVs2022DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the version of .NET and installation type, then click OK to install..
        /// </summary>
        public static string InstallDotnetDialogHeaderText {
            get {
                return ResourceManager.GetString("InstallDotnetDialogHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install .NET on target host.
        /// </summary>
        public static string InstallDotnetDialogTitle {
            get {
                return ResourceManager.GetString("InstallDotnetDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Type.
        /// </summary>
        public static string InstallDotnetDialogTypeLabel {
            get {
                return ResourceManager.GetString("InstallDotnetDialogTypeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string InstallDotnetDialogVersionLabel {
            get {
                return ResourceManager.GetString("InstallDotnetDialogVersionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SDK: Install the full .NET SDK
        ///Runtime dotnet: Install only the .NET runtime
        ///Runtime aspnet: Install the ASP.NET runtime.
        /// </summary>
        public static string InstallDotnetInstallationTypeDescription {
            get {
                return ResourceManager.GetString("InstallDotnetInstallationTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runtime: aspnet.
        /// </summary>
        public static string InstallDotnetInstallationTypeRuntimeAspnetDisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetInstallationTypeRuntimeAspnetDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runtime: dotnet.
        /// </summary>
        public static string InstallDotnetInstallationTypeRuntimeNetDisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetInstallationTypeRuntimeNetDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SDK.
        /// </summary>
        public static string InstallDotnetInstallationTypeSdkDisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetInstallationTypeSdkDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 6.0.
        /// </summary>
        public static string InstallDotnetVersion60DisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetVersion60DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 7.0.
        /// </summary>
        public static string InstallDotnetVersion70DisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetVersion70DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8.0.
        /// </summary>
        public static string InstallDotnetVersion80DisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetVersion80DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest STS:  The most recent Standard Term Support release of .NET
        ///Latest LTS:  The most recent Long Term Support release of .NET.
        /// </summary>
        public static string InstallDotnetVersionDescription {
            get {
                return ResourceManager.GetString("InstallDotnetVersionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest LTS.
        /// </summary>
        public static string InstallDotnetVersionLatestLtsDisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetVersionLatestLtsDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest STS.
        /// </summary>
        public static string InstallDotnetVersionLatestStsDisplayName {
            get {
                return ResourceManager.GetString("InstallDotnetVersionLatestStsDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LaunchBrowser: launchUrl has no valid value, skip launching..
        /// </summary>
        public static string LaunchTargetsProviderNoLaunchUrl {
            get {
                return ResourceManager.GetString("LaunchTargetsProviderNoLaunchUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching &apos;dotnet {0}&apos;.
        /// </summary>
        public static string PublishCommandLine {
            get {
                return ResourceManager.GetString("PublishCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publishing application FAILED with exit code {0}.
        /// </summary>
        public static string PublishFailed {
            get {
                return ResourceManager.GetString("PublishFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publishing application....
        /// </summary>
        public static string PublishStart {
            get {
                return ResourceManager.GetString("PublishStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publishing application OK.
        /// </summary>
        public static string PublishSuccess {
            get {
                return ResourceManager.GetString("PublishSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Debugger Launcher.
        /// </summary>
        public static string PublishWaitDialogCaption {
            get {
                return ResourceManager.GetString("PublishWaitDialogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publishing application ....
        /// </summary>
        public static string PublishWaitDialogMessageStart {
            get {
                return ResourceManager.GetString("PublishWaitDialogMessageStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running dotnet publish ....
        /// </summary>
        public static string PublishWaitDialogMessageUpdate {
            get {
                return ResourceManager.GetString("PublishWaitDialogMessageUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation error: must supply a non empty string consisting of letters, numbers, underscores, and/or hyphens.
        /// </summary>
        public static string RegexValidationRuleNoValidUsername {
            get {
                return ResourceManager.GetString("RegexValidationRuleNoValidUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing file permission - target: {0}, perm: {1}.
        /// </summary>
        public static string RemoteCommandChangeRemoteFilePermissionCaption {
            get {
                return ResourceManager.GetString("RemoteCommandChangeRemoteFilePermissionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing file permission FAILED: {0}.
        /// </summary>
        public static string RemoteCommandChangeRemoteFilePermissionCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandChangeRemoteFilePermissionCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to {0}@{1}... .
        /// </summary>
        public static string RemoteCommandCheckConnectionOutputPaneConnectingTo {
            get {
                return ResourceManager.GetString("RemoteCommandCheckConnectionOutputPaneConnectingTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to {0}@{1} (Port {2})... .
        /// </summary>
        public static string RemoteCommandCheckConnectionOutputPaneConnectingToWithPort {
            get {
                return ResourceManager.GetString("RemoteCommandCheckConnectionOutputPaneConnectingToWithPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking connection to {0} OK.
        /// </summary>
        public static string RemoteCommandCheckConnectionStatusbarCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandCheckConnectionStatusbarCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking connection to {0}.
        /// </summary>
        public static string RemoteCommandCheckConnectionStatusbarProgress {
            get {
                return ResourceManager.GetString("RemoteCommandCheckConnectionStatusbarProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleaning - target: {0}.
        /// </summary>
        public static string RemoteCommandCleanRemoteFolderCaption {
            get {
                return ResourceManager.GetString("RemoteCommandCleanRemoteFolderCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clean remote target path.
        /// </summary>
        public static string RemoteCommandCleanRemoteFolderCommandCaption {
            get {
                return ResourceManager.GetString("RemoteCommandCleanRemoteFolderCommandCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleaning FAILED: {0}.
        /// </summary>
        public static string RemoteCommandCleanRemoteFolderCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandCleanRemoteFolderCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleaning OK.
        /// </summary>
        public static string RemoteCommandCleanRemoteFolderCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandCleanRemoteFolderCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleaning - no supported projects found.
        ///Make sure you selected a &apos;SshRemoteLaunch&apos; launch profile..
        /// </summary>
        public static string RemoteCommandCleanRemoteFolderNoProjects {
            get {
                return ResourceManager.GetString("RemoteCommandCleanRemoteFolderNoProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleaning ....
        /// </summary>
        public static string RemoteCommandCleanRemoteFolderStatusbarProgress {
            get {
                return ResourceManager.GetString("RemoteCommandCleanRemoteFolderStatusbarProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAILED: {0}.
        /// </summary>
        public static string RemoteCommandCommonFailed {
            get {
                return ResourceManager.GetString("RemoteCommandCommonFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAILED: cURL is not installed. please install to use the command.
        /// </summary>
        public static string RemoteCommandCommonFailedCurlNotInstalled {
            get {
                return ResourceManager.GetString("RemoteCommandCommonFailedCurlNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing profile &apos;{0}&apos;.
        /// </summary>
        public static string RemoteCommandCommonProfile {
            get {
                return ResourceManager.GetString("RemoteCommandCommonProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing {0} profile &apos;{1}&apos;.
        /// </summary>
        public static string RemoteCommandCommonProjectAndProfile {
            get {
                return ResourceManager.GetString("RemoteCommandCommonProjectAndProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [SSH {0}@{1}] .
        /// </summary>
        public static string RemoteCommandCommonSshTarget {
            get {
                return ResourceManager.GetString("RemoteCommandCommonSshTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string RemoteCommandCommonSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandCommonSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploying application - no supported projects found.
        ///Make sure you selected a &apos;SshRemoteLaunch&apos; launch profile..
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderCommonNoProjects {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderCommonNoProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploying application - Source: {0}, Target: {1}.
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderCommonProgress {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderCommonProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploying application OK.
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAILED: rsync terminated with exit code {0}.
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderRsyncFailedExitCode {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderRsyncFailedExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAILED: rsync requires an absolute path for the local files.
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderRsyncFailedNoAbsolutePath {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderRsyncFailedNoAbsolutePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAILED: rsync is not installed. Please install to rsync bulk copy.
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderRsyncFailedNotInstalled {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderRsyncFailedNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching rsync (version 3.4.1  protocol version 32) session....
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderRsyncStart {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderRsyncStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to copying all files with SCP....
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderScpDeltaStart {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderScpDeltaStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to copying changed files with SCP....
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderScpFullStart {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderScpFullStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploying application....
        /// </summary>
        public static string RemoteCommandDeployRemoteFolderStatusbarProgress {
            get {
                return ResourceManager.GetString("RemoteCommandDeployRemoteFolderStatusbarProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger.
        /// </summary>
        public static string RemoteCommandInstallDebuggerCommandCaption {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerCommandCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger on targets....
        /// </summary>
        public static string RemoteCommandInstallDebuggerCommandStatusbarProgress {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerCommandStatusbarProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger - no supported projects found.
        ///Make sure you selected a &apos;SSH Remote&apos; launch profile..
        /// </summary>
        public static string RemoteCommandInstallDebuggerNoProjects {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerNoProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger from host.
        /// </summary>
        public static string RemoteCommandInstallDebuggerOfflineCommonProgress {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerOfflineCommonProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger from host FAILED: {0}.
        /// </summary>
        public static string RemoteCommandInstallDebuggerOfflineCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerOfflineCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger from host OK.
        /// </summary>
        public static string RemoteCommandInstallDebuggerOfflineCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerOfflineCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading - URL: {0}, Version: {1}, RuntimeID: {2} .
        /// </summary>
        public static string RemoteCommandInstallDebuggerOfflineOutputPaneProgressDownloading {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerOfflineOutputPaneProgressDownloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .
        /// </summary>
        public static string RemoteCommandInstallDebuggerOfflineOutputPaneProgressInstalling {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerOfflineOutputPaneProgressInstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger direct from internet.
        /// </summary>
        public static string RemoteCommandInstallDebuggerOnlineCommonProgress {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerOnlineCommonProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing VS Code Debugger direct from internet FAILED: {0}.
        /// </summary>
        public static string RemoteCommandInstallDebuggerOnlineCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDebuggerOnlineCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET.
        /// </summary>
        public static string RemoteCommandInstallDotnetCommandCaption {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetCommandCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET on targets....
        /// </summary>
        public static string RemoteCommandInstallDotnetCommandStatusbarText {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetCommandStatusbarText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To complete the installation, export the following environment variables (add to your .bashrc or .bash_profile):
        ///export DOTNET_ROOT={0}
        ///export PATH=$PATH:{0}.
        /// </summary>
        public static string RemoteCommandInstallDotnetExports {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetExports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET - no supported projects found.
        ///Make sure you selected a &apos;SshRemoteLaunch&apos; launch profile..
        /// </summary>
        public static string RemoteCommandInstallDotnetNoProjects {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetNoProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading binaries - URL: {0} .
        /// </summary>
        public static string RemoteCommandInstallDotnetOfflineOutputPaneDownloadingPayload {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetOfflineOutputPaneDownloadingPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading script - URL: {0}, RuntimeID: {1} .
        /// </summary>
        public static string RemoteCommandInstallDotnetOfflineOutputPaneDownloadingScript {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetOfflineOutputPaneDownloadingScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped downloading, use cache - file: {0}.
        /// </summary>
        public static string RemoteCommandInstallDotnetOfflineOutputPaneDownloadingSkipped {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetOfflineOutputPaneDownloadingSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing, this may take a while - file: {0} .
        /// </summary>
        public static string RemoteCommandInstallDotnetOfflineOutputPaneInstalling {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetOfflineOutputPaneInstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading binaries - target: {0} .
        /// </summary>
        public static string RemoteCommandInstallDotnetOfflineOutputPaneUploadingPayload {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetOfflineOutputPaneUploadingPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET runtime from host FAILED: {0}.
        /// </summary>
        public static string RemoteCommandInstallDotnetRuntimeOfflineCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetRuntimeOfflineCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET runtime from host OK.
        /// </summary>
        public static string RemoteCommandInstallDotnetRuntimeOfflineCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetRuntimeOfflineCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET runtime from host.
        /// </summary>
        public static string RemoteCommandInstallDotnetRuntimeOfflineOutputPaneProgress {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetRuntimeOfflineOutputPaneProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET runtime direct from internet FAILED: {0}.
        /// </summary>
        public static string RemoteCommandInstallDotnetRuntimeOnlineCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetRuntimeOnlineCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET runtime direct from internet OK.
        /// </summary>
        public static string RemoteCommandInstallDotnetRuntimeOnlineCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetRuntimeOnlineCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET runtime direct from internet.
        /// </summary>
        public static string RemoteCommandInstallDotnetRuntimeOnlineOutputPaneProgress {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetRuntimeOnlineOutputPaneProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading .NET - PowerShell script execution failed with &apos;{0}&apos;.
        /// </summary>
        public static string RemoteCommandInstallDotnetScriptExecutionFailed {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetScriptExecutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET SDK from host FAILED: {0}.
        /// </summary>
        public static string RemoteCommandInstallDotnetSdkOfflineCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetSdkOfflineCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET SDK from host OK.
        /// </summary>
        public static string RemoteCommandInstallDotnetSdkOfflineCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetSdkOfflineCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET SDK from host.
        /// </summary>
        public static string RemoteCommandInstallDotnetSdkOfflineOutputPaneProgress {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetSdkOfflineOutputPaneProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET SDK direct from internet FAILED: {0}.
        /// </summary>
        public static string RemoteCommandInstallDotnetSdkOnlineCompletedFailed {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetSdkOnlineCompletedFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET SDK direct from internet OK.
        /// </summary>
        public static string RemoteCommandInstallDotnetSdkOnlineCompletedSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetSdkOnlineCompletedSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing .NET SDK direct from internet.
        /// </summary>
        public static string RemoteCommandInstallDotnetSdkOnlineOutputPaneProgress {
            get {
                return ResourceManager.GetString("RemoteCommandInstallDotnetSdkOnlineOutputPaneProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching debugger....
        /// </summary>
        public static string RemoteCommandLaunchingDebugger {
            get {
                return ResourceManager.GetString("RemoteCommandLaunchingDebugger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ---- Launching debugger: Project: {0}, Configuration: {1} ----.
        /// </summary>
        public static string RemoteCommandLaunchingDebuggerOutputPaneStart {
            get {
                return ResourceManager.GetString("RemoteCommandLaunchingDebuggerOutputPaneStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking certificate.....
        /// </summary>
        public static string RemoteCommandSetupHttpsCheckProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsCheckProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check certificate: {0}.
        /// </summary>
        public static string RemoteCommandSetupHttpsCheckResult {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsCheckResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup HTTPS.
        /// </summary>
        public static string RemoteCommandSetupHttpsCommandCaption {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsCommandCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup HTTPS developer certificates....
        /// </summary>
        public static string RemoteCommandSetupHttpsCommandStatusbarText {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsCommandStatusbarText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup completed successfully..
        /// </summary>
        public static string RemoteCommandSetupHttpsCompleted {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup failed..
        /// </summary>
        public static string RemoteCommandSetupHttpsFailed {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install certificate.....
        /// </summary>
        public static string RemoteCommandSetupHttpsInstallProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsInstallProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install certificate: {0}.
        /// </summary>
        public static string RemoteCommandSetupHttpsInstallResult {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsInstallResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing {0} profile &apos;{1}&apos; hostname &apos;{2}&apos;.
        /// </summary>
        public static string RemoteCommandSetupHttpsProjectProfileHostname {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsProjectProfileHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload certificate.....
        /// </summary>
        public static string RemoteCommandSetupHttpsUploadProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupHttpsUploadProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup SSH.
        /// </summary>
        public static string RemoteCommandSetupSshCommandCaption {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshCommandCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorize SSH key on target....
        /// </summary>
        public static string RemoteCommandSetupSshCommandStatusbarAuthorizeProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshCommandStatusbarAuthorizeProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan SSH server fingerprints....
        /// </summary>
        public static string RemoteCommandSetupSshCommandStatusbarScanProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshCommandStatusbarScanProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection FAILED with &apos;{0}&apos; - make sure the SSH server is running and accessable..
        /// </summary>
        public static string RemoteCommandSetupSshConnectionFailed {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshConnectionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection FAILED with &apos;{0}&apos; - continue setup.
        /// </summary>
        public static string RemoteCommandSetupSshPhase1TryAuthenticatePrivateKeyFailed {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase1TryAuthenticatePrivateKeyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}@{1}:{2}] Try to create a SSH connection using the provided private key....
        /// </summary>
        public static string RemoteCommandSetupSshPhase1TryAuthenticatePrivateKeyProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase1TryAuthenticatePrivateKeyProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection established successfully - no need to add public key..
        /// </summary>
        public static string RemoteCommandSetupSshPhase1TryAuthenticatePrivateKeySuccess {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase1TryAuthenticatePrivateKeySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection FAILED with &apos;{0}&apos; - aborting.....
        /// </summary>
        public static string RemoteCommandSetupSshPhase2TryAuthenticatePasswordFailed {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase2TryAuthenticatePasswordFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}@{1}:{2}] Try to create a SSH connection using the provided password....
        /// </summary>
        public static string RemoteCommandSetupSshPhase2TryAuthenticatePasswordProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase2TryAuthenticatePasswordProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection established successfully - continue setup.
        /// </summary>
        public static string RemoteCommandSetupSshPhase2TryAuthenticatePasswordSuccess {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase2TryAuthenticatePasswordSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FAILED with &apos;{0}&apos;.
        /// </summary>
        public static string RemoteCommandSetupSshPhase3AddKeyFailed {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase3AddKeyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}@{1}:{2}] Adding key to authorized_keys....
        /// </summary>
        public static string RemoteCommandSetupSshPhase3AddKeyProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase3AddKeyProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to added public key successfully..
        /// </summary>
        public static string RemoteCommandSetupSshPhase3AddKeySuccess {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase3AddKeySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection AILED with &apos;{0}&apos;.
        /// </summary>
        public static string RemoteCommandSetupSshPhase4TryAuthenticatePrivateKeyFailed {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase4TryAuthenticatePrivateKeyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}@{1}:{2}] validate public key has been successfully added....
        /// </summary>
        public static string RemoteCommandSetupSshPhase4TryAuthenticatePrivateKeyProgress {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase4TryAuthenticatePrivateKeyProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to connection established successfully..
        /// </summary>
        public static string RemoteCommandSetupSshPhase4TryAuthenticatePrivateKeySuccess {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshPhase4TryAuthenticatePrivateKeySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}@{1}:{2}] adding fingerprints to known_hosts file.....
        /// </summary>
        public static string RemoteCommandSetupSshScanProgressFingerprintAdd {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshScanProgressFingerprintAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}@{1}:{2}] Scanning SSH server fingerprints.....
        /// </summary>
        public static string RemoteCommandSetupSshScanProgressFingerprintScan {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshScanProgressFingerprintScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}@{1}:{2}] fingerprints found in known_hosts, skipping.....
        /// </summary>
        public static string RemoteCommandSetupSshScanProgressFingerprintSkip {
            get {
                return ResourceManager.GetString("RemoteCommandSetupSshScanProgressFingerprintSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ok.
        /// </summary>
        public static string RemoteCommandUploadOutputPaneDone {
            get {
                return ResourceManager.GetString("RemoteCommandUploadOutputPaneDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ..
        /// </summary>
        public static string RemoteCommandUploadOutputPaneProgress {
            get {
                return ResourceManager.GetString("RemoteCommandUploadOutputPaneProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading {0}..
        /// </summary>
        public static string RemoteCommandUploadOutputPaneStart {
            get {
                return ResourceManager.GetString("RemoteCommandUploadOutputPaneStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy failed with &apos;{0}&apos;.
        /// </summary>
        public static string SecureShellDeployProviderDeployFailed {
            get {
                return ResourceManager.GetString("SecureShellDeployProviderDeployFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the browser you want to use to start debugging..
        /// </summary>
        public static string SelectBrowserDialogHeaderText {
            get {
                return ResourceManager.GetString("SelectBrowserDialogHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Browser.
        /// </summary>
        public static string SelectBrowserDialogTitle {
            get {
                return ResourceManager.GetString("SelectBrowserDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the HTTPS certificate setup mode, then press OK to start..
        /// </summary>
        public static string SetupHttpsDialogHeaderText {
            get {
                return ResourceManager.GetString("SetupHttpsDialogHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup Mode.
        /// </summary>
        public static string SetupHttpsDialogModeLabel {
            get {
                return ResourceManager.GetString("SetupHttpsDialogModeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup HTTPS certificate.
        /// </summary>
        public static string SetupHttpsDialogTitle {
            get {
                return ResourceManager.GetString("SetupHttpsDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update: Update the certificate if invalid or expired
        ///Replace: Replace the existing certificate with a new one..
        /// </summary>
        public static string SetupHttpsModeDescription {
            get {
                return ResourceManager.GetString("SetupHttpsModeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace.
        /// </summary>
        public static string SetupHttpsModeReplaceDisplayName {
            get {
                return ResourceManager.GetString("SetupHttpsModeReplaceDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string SetupHttpsModeUpdateDisplayName {
            get {
                return ResourceManager.GetString("SetupHttpsModeUpdateDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ....
        /// </summary>
        public static string SetupSshDialogFileBrowseContent {
            get {
                return ResourceManager.GetString("SetupSshDialogFileBrowseContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select host connection info and key file, then press OK to setup..
        /// </summary>
        public static string SetupSshDialogHeaderText {
            get {
                return ResourceManager.GetString("SetupSshDialogHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host.
        /// </summary>
        public static string SetupSshDialogHostLabel {
            get {
                return ResourceManager.GetString("SetupSshDialogHostLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DNS name or IP address of the target device..
        /// </summary>
        public static string SetupSshDialogHostNameDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogHostNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The port to connect to on the target device..
        /// </summary>
        public static string SetupSshDialogHostPortDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogHostPortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string SetupSshDialogKeyPairCreateContent {
            get {
                return ResourceManager.GetString("SetupSshDialogKeyPairCreateContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a RSA public key pair with the default name (id_rsa) and key length of 2048 bits..
        /// </summary>
        public static string SetupSshDialogKeyPairCreateDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogKeyPairCreateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force IPv4.
        /// </summary>
        public static string SetupSshDialogKeyPairForceIPv4Content {
            get {
                return ResourceManager.GetString("SetupSshDialogKeyPairForceIPv4Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, forces the command to use IPv4 addresses.
        /// </summary>
        public static string SetupSshDialogKeyPairForceIPv4Description {
            get {
                return ResourceManager.GetString("SetupSshDialogKeyPairForceIPv4Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password to be used for connecting to the target device..
        /// </summary>
        public static string SetupSshDialogPasswordDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogPasswordDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string SetupSshDialogPasswordLabel {
            get {
                return ResourceManager.GetString("SetupSshDialogPasswordLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for private key files..
        /// </summary>
        public static string SetupSshDialogPrivateKeyFileBrowseDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogPrivateKeyFileBrowseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH private key file to test successful configuration..
        /// </summary>
        public static string SetupSshDialogPrivateKeyFileDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogPrivateKeyFileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private key file.
        /// </summary>
        public static string SetupSshDialogPrivateKeyFileLabel {
            get {
                return ResourceManager.GetString("SetupSshDialogPrivateKeyFileLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for public key files..
        /// </summary>
        public static string SetupSshDialogPublicKeyFileBrowseDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogPublicKeyFileBrowseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH public key file that should be added to the authorized keys on the target device..
        /// </summary>
        public static string SetupSshDialogPublicKeyFileDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogPublicKeyFileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public key file.
        /// </summary>
        public static string SetupSshDialogPublicKeyFileLabel {
            get {
                return ResourceManager.GetString("SetupSshDialogPublicKeyFileLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup SSH private key authentication.
        /// </summary>
        public static string SetupSshDialogTitle {
            get {
                return ResourceManager.GetString("SetupSshDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user name to be used for connecting to the target device..
        /// </summary>
        public static string SetupSshDialogUsernameDescription {
            get {
                return ResourceManager.GetString("SetupSshDialogUsernameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name.
        /// </summary>
        public static string SetupSshDialogUsernameLabel {
            get {
                return ResourceManager.GetString("SetupSshDialogUsernameLabel", resourceCulture);
            }
        }
    }
}
